@model IEnumerable<AdventureWorks2014.Models.Employee>
@using X.PagedList.Mvc.Core
@using X.PagedList
@{
    ViewData["Title"] = "DisplayGrid";
}
    
<h1 class="pl-2 pt-5 text-uppercase">employees</h1>


<div class="paged-list-style container-fluid pt-5">
    <div class="row">
        <div class="col-10 col-lg-10 page-padding-left">
            @Html.PagedListPager(
           (IPagedList)Model,
           page => Url.Action("DisplayGrid", new { page = page }),
           new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
           {
               ContainerDivClasses = new[] { "container" },
               LiElementClasses = new[] { "page-item" },
               PageClasses = new[] { "pagination page-link" }
           })
        </div>

        

        <div class="col-2 col-lg-2"><a class="btn btn-success btn-sm float-right btn-padding-8px12px" asp-action="Create">Create New</a></div>
    </div> <!-- end row -->
</div>

<div class="row pb-3">
    <div class="col-10 col-lg-10"></div>
    <div class="col-2 col-lg-2">
        <div class="row">
            <div class="pr-5">
                <a asp-action="Index">List</a>
            </div>
            <div>
                <a asp-action="DisplayGrid">Grid</a>
            </div>
        </div>
    </div>
</div>

<div class="row pt-4">

@foreach(var item in Model)
{
    <div class="col-3 pb-3">
        <div class="card onMouseHoverRow" onclick="location.href='@Url.Action("Details", new { id = item.BusinessEntityId })'">
            <img src="https://via.placeholder.com/150" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title" style="overflow-y:hidden">@Html.DisplayFor(modelItem => item.Person.FirstName) @Html.DisplayFor(modelItem => item.Person.LastName)</h5>
                <p class="card-text">@Html.DisplayFor(modelItem => item.Gender)</p>
                <p class="card-text">
                    @foreach (var x in item.EmployeeDepartmentHistory)
                    {
                        if (!x.EndDate.HasValue)
                        {
                            @x.Department.Name
                        }
                    }
                </p>
                <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.BusinessEntityId">Details</a>
            </div>
        </div>

    </div>
    }
</div>

<div class="paged-list-style container-fluid pt-5">
    <div class="row">
        <div class="col-10 col-lg-10 page-padding-left">
            @Html.PagedListPager(
           (IPagedList)Model,
           page => Url.Action("DisplayGrid", new { page = page }),
           new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
           {
               ContainerDivClasses = new[] { "container" },
               LiElementClasses = new[] { "page-item" },
               PageClasses = new[] { "pagination page-link" }
           })
        </div>

        <div class="col-2 col-lg-2"><a class="btn btn-success btn-sm float-right btn-padding-8px12px" asp-action="Create">Create New</a></div>
    </div> <!-- end row -->
</div>
<!-- end paged-list-style name -->

@section Scripts {
    <script>
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
}